@inproceedings{xu_repersp_2017,
	title = {{REPERSP}: {Recommending} {Personalized} {Software} {Projects} on {GitHub}},
	doi = {10.1109/ICSME.2017.20},
	abstract = {In the open source community such as GitHub, developers usually need to find projects similar to their work, with the aim to reuse their functions and explore ideas of features that could be possibly added into their project at hand. Traditional text search engine can help detect similar resources. However, it is difficult for developers to use in open source community because a few query words cannot describe the whole features of a project. In this paper, we present a practical software recommendation system, REPERSP, which is used to recommend personalized software projects in GitHub. According to the features of projects created by developers and their behavior to other known projects, REPERSP recommends the top N relevant and personalized software projects. Moreover, REPERSP is implemented with the MapReduce parallel processing frame - Apache Spark for large-scale data, which can be scaled to a large number of users and projects for practical usage. Empirical results show that REPERSP can recommend more accurate results compared with other two recommendation algorithms, i.e., UserCF (user collaborative filtering) and ItemCF (item collaborative filtering). Video of our demo is available at https://youtu.be/WKigSUV4UA0.},
	booktitle = {2017 {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution} ({ICSME})},
	author = {Xu, W. and Sun, X. and Hu, J. and Li, B.},
	year = {2017},
	keywords = {Collaboration, Computers, Engines, GitHub, personalized recommendation, Project recommendation, Software, Software algorithms, Sparks, Synchronization},
	pages = {648--652},
	file = {Xu et al. - 2017 - REPERSP Recommending Personalized Software Projec.pdf:/home/tom/Zotero/storage/NWPZU7K5/Xu et al. - 2017 - REPERSP Recommending Personalized Software Projec.pdf:application/pdf},
}

@article{jonschkowski_patterns_2016,
	title = {Patterns for {Learning} with {Side} {Information}},
	url = {http://arxiv.org/abs/1511.06429},
	abstract = {Supervised, semi-supervised, and unsupervised learning estimate a function given input/output samples. Generalization of the learned function to unseen data can be improved by incorporating side information into learning. Side information are data that are neither from the input space nor from the output space of the function, but include useful information for learning it. In this paper we show that learning with side information subsumes a variety of related approaches, e.g. multi-task learning, multi-view learning and learning using privileged information. Our main contributions are (i) a new perspective that connects these previously isolated approaches, (ii) insights about how these methods incorporate different types of prior knowledge, and hence implement different patterns, (iii) facilitating the application of these methods in novel tasks, as well as (iv) a systematic experimental evaluation of these patterns in two supervised learning tasks.},
	urldate = {2021-04-16},
	journal = {arXiv:1511.06429 [cs, stat]},
	author = {Jonschkowski, Rico and HÃ¶fer, Sebastian and Brock, Oliver},
	month = feb,
	year = {2016},
	note = {arXiv: 1511.06429},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning},
	file = {arXiv Fulltext PDF:/home/tom/Zotero/storage/9P4IDZ5E/Jonschkowski et al. - 2016 - Patterns for Learning with Side Information.pdf:application/pdf;arXiv.org Snapshot:/home/tom/Zotero/storage/9BDXUJGT/1511.html:text/html},
}

@article{zhang_knowledge_2020,
	title = {A {Knowledge} {Graph} based {Approach} for {Mobile} {Application} {Recommendation}},
	url = {http://arxiv.org/abs/2009.08621},
	abstract = {With the rapid prevalence of mobile devices and the dramatic proliferation of mobile applications (apps), app recommendation becomes an emergent task that would benefit both app users and stockholders. How to effectively organize and make full use of rich side information of users and apps is a key challenge to address the sparsity issue for traditional approaches. To meet this challenge, we proposed a novel end-to-end Knowledge Graph Convolutional Embedding Propagation Model (KGEP) for app recommendation. Specifically, we first designed a knowledge graph construction method to model the user and app side information, then adopted KG embedding techniques to capture the factual triplet-focused semantics of the side information related to the first-order structure of the KG, and finally proposed a relation-weighted convolutional embedding propagation model to capture the recommendation-focused semantics related to high-order structure of the KG. Extensive experiments conducted on a real-world dataset validate the effectiveness of the proposed approach compared to the state-of-the-art recommendation approaches.},
	author = {Zhang, Mingwei and Zhao, Jiawei and Dong, Hai and Deng, Ke and Liu, Ying},
	year = {2020},
	file = {Zhang et al. - 2020 - A Knowledge Graph based Approach for Mobile Applic.pdf:/home/tom/Zotero/storage/9EB4UE2B/Zhang et al. - 2020 - A Knowledge Graph based Approach for Mobile Applic.pdf:application/pdf},
}

@article{wang2019dgl,
    title={Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks},
    author={Minjie Wang and Da Zheng and Zihao Ye and Quan Gan and Mufei Li and Xiang Song and Jinjing Zhou and Chao Ma and Lingfan Yu and Yu Gai and Tianjun Xiao and Tong He and George Karypis and Jinyang Li and Zheng Zhang},
    year={2019},
    journal={arXiv preprint arXiv:1909.01315}
}


@article{sun_personalized_2018,
	title = {Personalized project recommendation on {GitHub}},
	volume = {61},
	issn = {18691919},
	doi = {10.1007/s11432-017-9419-x},
	abstract = {GitHub is a software development platform that facilitates collaboration and participation in project development. Typically, developers search for relevant projects in order to reuse functions and identify useful features. Recommending suitable projects for developers can save their time. However, finding suitable projects among many projects on GitHub is difficult. In addition, different users may have different requirements. A recommendation system would help developers by reducing the time required to find suitable projects. In this paper, we propose an approach to recommend projects that considers developer behaviors and project features. The proposed approach automatically recommends the top-N most relevant software projects. We also integrate user feedback to improve recommendation accuracy. The results of an empirical study using data crawled from GitHub demonstrate that the proposed approach can efficiently recommend relevant software projects with relatively high precision.},
	number = {5},
	journal = {Science China Information Sciences},
	author = {Sun, Xiaobing and Xu, Wenyuan and Xia, Xin and Chen, Xiang and Li, Bin},
	year = {2018},
	note = {Publisher: Science in China Press},
	keywords = {GitHub, personalized recommendation, developer behavior, software recommendation, user feedback},
	file = {Sun et al. - 2018 - Personalized project recommendation on GitHub.pdf:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/VPABTJBE/Sun et al. - 2018 - Personalized project recommendation on GitHub.pdf:application/pdf},
}

@inproceedings{rehurek_lrec,
      title = {{Software Framework for Topic Modelling with Large Corpora}},
      author = {Radim {\v R}eh{\r u}{\v r}ek and Petr Sojka},
      booktitle = {{Proceedings of the LREC 2010 Workshop on New
           Challenges for NLP Frameworks}},
      pages = {45--50},
      year = 2010,
      month = May,
      day = 22,
      publisher = {ELRA},
      address = {Valletta, Malta},
      note={\url{http://is.muni.cz/publication/884893/en}},
      language={English}
}

@article{kipf_semi-supervised_2017,
	title = {Semi-{Supervised} {Classification} with {Graph} {Convolutional} {Networks}},
	url = {http://arxiv.org/abs/1609.02907},
	abstract = {We present a scalable approach for semi-supervised learning on graph-structured data that is based on an efficient variant of convolutional neural networks which operate directly on graphs. We motivate the choice of our convolutional architecture via a localized first-order approximation of spectral graph convolutions. Our model scales linearly in the number of graph edges and learns hidden layer representations that encode both local graph structure and features of nodes. In a number of experiments on citation networks and on a knowledge graph dataset we demonstrate that our approach outperforms related methods by a significant margin.},
	urldate = {2021-04-14},
	journal = {arXiv:1609.02907 [cs, stat]},
	author = {Kipf, Thomas N. and Welling, Max},
	month = feb,
	year = {2017},
	note = {arXiv: 1609.02907},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning},
	annote = {Comment: Published as a conference paper at ICLR 2017},
	file = {arXiv Fulltext PDF:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/3T35CRVI/Kipf and Welling - 2017 - Semi-Supervised Classification with Graph Convolut.pdf:application/pdf;arXiv.org Snapshot:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/AQBJ3NKG/1609.html:text/html},
}

@article{Khamsi_2001,
author = {Khamsi, Mohamed},
year = {2001},
month = {01},
pages = {},
title = {An Introduction to Metric Spaces and Fixed Point Theory}
}

@article{guendouz_recommending_2015,
	title = {Recommending {Relevant} {Open} {Source} {Projects} on {GitHub} using a {Collaborative}-{Filtering} {Technique}},
	volume = {6},
	issn = {1942-3926},
	url = {https://doi.org/10.4018/IJOSSP.2015010101},
	doi = {10.4018/IJOSSP.2015010101},
	abstract = {The GitHub website represents nowadays an essential tool for developers from around the world; it is considered as a social network for them in which they can share their open source projects with others in a form of repositories. This paper presents and discusses the design and the implementation of a new recommender system for GitHub repositories based on a collaborative-filtering approach, which can be useful in many ways in the process of searching for the right solutions to build projects. The GitHub website is becoming very popular these days, a lot of projects are shared by millions of developers, building this recommender system can reduce searching time and make search results more and more relevant. The authors evaluate their system by conducting a set of experiments on a real data set using different well-known metrics and the k-fold cross validation method. Results obtained from these experiments are very promising, the authors found that their recommender system can reaches better precision and recall accuracy.},
	number = {1},
	urldate = {2021-05-13},
	journal = {International Journal of Open Source Software and Processes},
	author = {Guendouz, Mohamed and Amine, Abdelmalek and Hamou, Reda Mohamed},
	month = jan,
	year = {2015},
	keywords = {GitHub, Recommender Systems, Collaborative-Filtering, Open Source, Social Networks},
	pages = {1--16},
	file = {Guendouz et al. - 2015 - Recommending Relevant Open Source Projects on GitH.pdf:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/NGGYG9XV/Guendouz et al. - 2015 - Recommending Relevant Open Source Projects on GitH.pdf:application/pdf},
}

@techreport{mansur_review_nodate,
	title = {A {Review} on {Recommender} {Systems}},
	abstract = {Recommender systems have turn into an important recommendation technique on the web and are widely used for recommendation of different items. On web huge amount of data is available online, the need of analysis and personalization systems is increasing permanently. This paper presents introduction to the categories of recommender systems and different recommendation techniques are mainly classified into three categories: collaborative filtering, content based filtering and hybrid filtering. This paper also discusses challenges of recommender system. Every method has its weakness and strengths that relate to the domain.},
	author = {Mansur, Farhin and Patel, Vibha and Patel, Mihir},
	keywords = {Collaborative filtering, Content based filtering, Hybrid filtering, Index Terms-Recommender system},
	file = {Mansur et al. - A Review on Recommender Systems.pdf:/home/tom/Zotero/storage/HNRPFEAI/Mansur et al. - A Review on Recommender Systems.pdf:application/pdf},
}

@article{park_literature_2012,
	title = {A literature review and classification of recommender systems research},
	volume = {39},
	issn = {09574174},
	doi = {10.1016/j.eswa.2012.02.038},
	abstract = {Recommender systems have become an important research field since the emergence of the first paper on collaborative filtering in the mid-1990s. Although academic research on recommender systems has increased significantly over the past 10 years, there are deficiencies in the comprehensive literature review and classification of that research. For that reason, we reviewed 210 articles on recommender systems from 46 journals published between 2001 and 2010, and then classified those by the year of publication, the journals in which they appeared, their application fields, and their data mining techniques. The 210 articles are categorized into eight application fields (books, documents, images, movie, music, shopping, TV programs, and others) and eight data mining techniques (association rule, clustering, decision tree, k-nearest neighbor, link analysis, neural network, regression, and other heuristic methods). Our research provides information about trends in recommender systems research by examining the publication years of the articles, and provides practitioners and researchers with insight and future direction on recommender systems. We hope that this paper helps anyone who is interested in recommender systems research with insight for future research direction. Â© 2012 Elsevier Ltd. All rights reserved.},
	number = {11},
	journal = {Expert Systems with Applications},
	author = {Park, Deuk Hee and Kim, Hyea Kyeong and Choi, Il Young and Kim, Jae Kyeong},
	year = {2012},
	note = {Publisher: Elsevier Ltd},
	keywords = {Classification, Data mining technique, Literature review, Recommender systems},
	pages = {10059--10072},
	file = {Park et al. - 2012 - A literature review and classification of recommen.pdf:/home/tom/Zotero/storage/BYZZWD9D/Park et al. - 2012 - A literature review and classification of recommen.pdf:application/pdf},
}

@article{kim_sequential_2021,
	title = {Sequential recommendations on {GitHub} repository},
	volume = {11},
	issn = {20763417},
	doi = {10.3390/app11041585},
	abstract = {The software development platform is an increasingly expanding industry. It is growing steadily due to the active research and sharing of artificial intelligence and deep learning. Further, predicting usersâ propensity in this huge community and recommending a new repository is beneficial for researchers and users. Despite this, only a few researches have been done on the recommendation system of such platforms. In this study, we propose a method to model extensive user data of an online community with a deep learning-based recommendation system. This study shows that a new repository can be effectively recommended based on the accumulated big data from the user. Moreover, this study is the first study of the sequential recommendation system that provides a new dataset of a software development platform, which is as large as the prevailing datasets. The experiments show that the proposed dataset can be practiced in various recommendation tasks.},
	number = {4},
	journal = {Applied Sciences (Switzerland)},
	author = {Kim, Jae Won and Wi, Jeong A. and Kim, Young Bin},
	year = {2021},
	note = {Publisher: MDPI AG},
	keywords = {Dataset, Deep neural network, Implicit feedback, Recommendation system, Sequential recommendation systems},
	pages = {1--14},
	file = {Kim et al. - 2021 - Sequential recommendations on GitHub repository.pdf:/home/tom/Zotero/storage/SZG7TXSQ/Kim et al. - 2021 - Sequential recommendations on GitHub repository.pdf:application/pdf},
}

@article{wu_graph_2020,
	title = {Graph {Neural} {Networks} in {Recommender} {Systems}: {A} {Survey}},
	url = {http://arxiv.org/abs/2011.02260},
	abstract = {With the explosive growth of online information, recommender systems play a key role to alleviate such information overload. Due to the important application value of recommender system, there have always been emerging works in this field. In recent years, graph neural network (GNN) techniques have gained considerable interests which can naturally integrate node information and topological structure. Owing to the outperformance of GNN in learning on graph data, GNN methods have been widely applied in many fields. In recommender systems, the main challenge is to learn the efficient user/item embeddings from their interactions and side information if available. Since most of the information essentially has graph structure and GNNs have superiority in representation learning, the field of utilizing graph neural network in recommender systems is flourishing. This article aims to provide a comprehensive review of recent research efforts on graph neural network based recommender systems. Specifically, we provide a taxonomy of graph neural network based recommendation models and state new perspectives pertaining to the development of this field.},
	author = {Wu, Shiwen and Zhang, Wentao and Sun, Fei and Cui, Bin},
	year = {2020},
	file = {Wu et al. - 2020 - Graph Neural Networks in Recommender Systems A Su.pdf:/home/tom/Zotero/storage/U3EJ6FXW/Wu et al. - 2020 - Graph Neural Networks in Recommender Systems A Su.pdf:application/pdf},
}

@inproceedings{jiang_open_2017,
	title = {Open source repository recommendation in social coding},
	isbn = {978-1-4503-5022-8},
	doi = {10.1145/3077136.3080753},
	abstract = {Social coding and open source repositories have become more and more popular. Software developers have various alternatives to contribute themselves to the communities and collaborate with others. However, nowadays there is no effective recommender suggesting developers appropriate repositories in both the academia and the industry. Although existing one-class collaborative filtering (OCCF) approaches can be applied to this problem, they do not consider particular constraints of social coding such as the programming languages, which, to some extent, associate the repositories with the developers. The aim of this paper is to investigate the feasibility of leveraging user programming language preference to improve the performance of OCCF-based repository recommendation. Based on matrix factorization, we propose language-regularized matrix factorization (LRMF), which is regularized by the relationships between user programming language preferences. Extensive experiments have been conducted on the real-world dataset of GitHub. The results demonstrate that our framework significantly outperforms five competitive baselines.},
	booktitle = {{SIGIR} 2017 - {Proceedings} of the 40th {International} {ACM} {SIGIR} {Conference} on {Research} and {Development} in {Information} {Retrieval}},
	publisher = {Association for Computing Machinery, Inc},
	author = {Jiang, Jyun Yu and Cheng, Pu Jen and Wang, Wei},
	year = {2017},
	keywords = {Manifold regularization, Open source repository, Repository recommendation, User programming language preference},
	pages = {1173--1176},
	file = {Jiang et al. - 2017 - Open source repository recommendation in social co.pdf:/home/tom/Zotero/storage/QRT9J425/Jiang et al. - 2017 - Open source repository recommendation in social co.pdf:application/pdf},
}

@inproceedings{inka_open_2018,
	title = {Open {Source} {Software} {Recommendations} {Using} {Github}},
	isbn = {978-3-030-00066-0},
	abstract = {The focus of this work is on providing an open source software recommendations using the Github API. Specifically, we propose a hybrid method that considers the programming languages, topics and README documents that appear in the users' repositories. To demonstrate our approach, we implement a proof of concept that provides recommendations.},
	booktitle = {Digital {Libraries} for {Open} {Knowledge}},
	publisher = {Springer International Publishing},
	author = {{Inka} and Miika, Stefanidis Kostas Koskela and {Simola}},
	editor = {{Fabio} and Cristina, Ribeiro and Gabriel, David and Eva, Lopes JoÃ£o Correia MÃ©ndez and {Crestani}},
	year = {2018},
	pages = {279--285},
	file = {Inka et al. - 2018 - Open Source Software Recommendations Using Github.pdf:/home/tom/Zotero/storage/PQSMFNKW/Inka et al. - 2018 - Open Source Software Recommendations Using Github.pdf:application/pdf},
}

@inproceedings{zhang_detecting_2017,
	title = {Detecting similar repositories on {GitHub}},
	doi = {10.1109/SANER.2017.7884605},
	abstract = {GitHub contains millions of repositories among which many are similar with one another (i.e., having similar source codes or implementing similar functionalities). Finding similar repositories on GitHub can be helpful for software engineers as it can help them reuse source code, build prototypes, identify alternative implementations, explore related projects, find projects to contribute to, and discover code theft and plagiarism. Previous studies have proposed techniques to detect similar applications by analyzing API usage patterns and software tags. However, these prior studies either only make use of a limited source of information or use information not available for projects on GitHub. In this paper, we propose a novel approach that can effectively detect similar repositories on GitHub. Our approach is designed based on three heuristics leveraging two data sources (i.e., GitHub stars and readme files) which are not considered in previous works. The three heuristics are: repositories whose readme files contain similar contents are likely to be similar with one another, repositories starred by users of similar interests are likely to be similar, and repositories starred together within a short period of time by the same user are likely to be similar. Based on these three heuristics, we compute three relevance scores (i.e., readme-based relevance, stargazer-based relevance, and time-based relevance) to assess the similarity between two repositories. By integrating the three relevance scores, we build a recommendation system called RepoPal to detect similar repositories. We compare RepoPal to a prior state-of-the-art approach CLAN using one thousand Java repositories on GitHub. Our empirical evaluation demonstrates that RepoPal achieves a higher success rate, precision and confidence over CLAN.},
	booktitle = {2017 {IEEE} 24th {International} {Conference} on {Software} {Analysis}, {Evolution} and {Reengineering} ({SANER})},
	author = {Zhang, Y. and Lo, D. and Kochhar, P. S. and Xia, X. and Li, Q. and Sun, J.},
	year = {2017},
	keywords = {GitHub, Androids, Humanoid robots, Information Retrieval, Java, Open source software, Plagiarism, Recommendation System, Search engines, Similar Repositories},
	pages = {13--23},
	file = {Zhang et al. - 2017 - Detecting similar repositories on GitHub.pdf:/home/tom/Zotero/storage/FJAWYKQJ/Zhang et al. - 2017 - Detecting similar repositories on GitHub.pdf:application/pdf},
}

@inproceedings{shao_paper2repo_2020,
	title = {Paper2repo: {GitHub} {Repository} {Recommendation} for {Academic} {Papers}},
	isbn = {978-1-4503-7023-3},
	url = {https://doi.org/10.1145/3366423.3380145},
	doi = {10.1145/3366423.3380145},
	abstract = {GitHub has become a popular social application platform, where a large number of users post their open source projects. In particular, an increasing number of researchers release repositories of source code related to their research papers in order to attract more people to follow their work. Motivated by this trend, we describe a novel item-item cross-platform recommender system, paper2repo, that recommends relevant repositories on GitHub that match a given paper in an academic search system such as Microsoft Academic. The key challenge is to identify the similarity between an input paper and its related repositories across the two platforms, without the benefit of human labeling. Towards that end, paper2repo integrates text encoding and constrained graph convolutional networks (GCN) to automatically learn and map the embeddings of papers and repositories into the same space, where proximity offers the basis for recommendation. To make our method more practical in real life systems, labels used for model training are computed automatically from features of user actions on GitHub. In machine learning, such automatic labeling is often called distant supervision. To the authorsâ knowledge, this is the first distant-supervised cross-platform (paper to repository) matching system. We evaluate the performance of paper2repo on real-world data sets collected from GitHub and Microsoft Academic. Results demonstrate that it outperforms other state of the art recommendation methods.},
	booktitle = {Proceedings of {The} {Web} {Conference} 2020},
	publisher = {Association for Computing Machinery},
	author = {Shao, Huajie and Sun, Dachun and Wu, Jiahao and Zhang, Zecheng and Zhang, Aston and Yao, Shuochao and Liu, Shengzhong and Wang, Tianshi and Zhang, Chao and Abdelzaher, Tarek},
	year = {2020},
	keywords = {constrained graph convolutional networks, cross-platform recommendation, Recommender system, text encoding},
	pages = {629--639},
	file = {Shao et al. - 2020 - Paper2repo GitHub Repository Recommendation for A.pdf:/home/tom/Zotero/storage/QGS8C435/Shao et al. - 2020 - Paper2repo GitHub Repository Recommendation for A.pdf:application/pdf},
}

@inproceedings{wang_knowledge_2019,
	title = {Knowledge {Graph} {Convolutional} {Networks} for {Recommender} {Systems}},
	isbn = {978-1-4503-6674-8},
	url = {https://doi.org/10.1145/3308558.3313417},
	doi = {10.1145/3308558.3313417},
	abstract = {To alleviate sparsity and cold start problem of collaborative filtering based recommender systems, researchers and engineers usually collect attributes of users and items, and design delicate algorithms to exploit these additional information. In general, the attributes are not isolated but connected with each other, which forms a knowledge graph (KG). In this paper, we propose Knowledge Graph Convolutional Networks (KGCN), an end-to-end framework that captures inter-item relatedness effectively by mining their associated attributes on the KG. To automatically discover both high-order structure information and semantic information of the KG, we sample from the neighbors for each entity in the KG as their receptive field, then combine neighborhood information with bias when calculating the representation of a given entity. The receptive field can be extended to multiple hops away to model high-order proximity information and capture users' potential long-distance interests. Moreover, we implement the proposed KGCN in a minibatch fashion, which enables our model to operate on large datasets and KGs. We apply the proposed model to three datasets about movie, book, and music recommendation, and experiment results demonstrate that our approach outperforms strong recommender baselines.},
	booktitle = {The {World} {Wide} {Web} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Hongwei and Zhao, Miao and Xie, Xing and Li, Wenjie and Guo, Minyi},
	year = {2019},
	keywords = {Recommender systems, Graph convolutional networks, Knowledge graph},
	pages = {3307--3313},
	file = {Wang et al. - 2019 - Knowledge Graph Convolutional Networks for Recomme.pdf:/home/tom/Zotero/storage/JXS9E9TS/Wang et al. - 2019 - Knowledge Graph Convolutional Networks for Recomme.pdf:application/pdf},
}

@inproceedings{fan_graph_2019,
	title = {Graph {Neural} {Networks} for {Social} {Recommendation}},
	isbn = {978-1-4503-6674-8},
	url = {https://doi.org/10.1145/3308558.3313488},
	doi = {10.1145/3308558.3313488},
	abstract = {In recent years, Graph Neural Networks (GNNs), which can naturally integrate node information and topological structure, have been demonstrated to be powerful in learning on graph data. These advantages of GNNs provide great potential to advance social recommendation since data in social recommender systems can be represented as user-user social graph and user-item graph; and learning latent factors of users and items is the key. However, building social recommender systems based on GNNs faces challenges. For example, the user-item graph encodes both interactions and their associated opinions; social relations have heterogeneous strengths; users involve in two graphs (e.g., the user-user social graph and the user-item graph). To address the three aforementioned challenges simultaneously, in this paper, we present a novel graph neural network framework (GraphRec) for social recommendations. In particular, we provide a principled approach to jointly capture interactions and opinions in the user-item graph and propose the framework GraphRec, which coherently models two graphs and heterogeneous strengths. Extensive experiments on two real-world datasets demonstrate the effectiveness of the proposed framework GraphRec.},
	booktitle = {The {World} {Wide} {Web} {Conference}},
	publisher = {Association for Computing Machinery},
	author = {Fan, Wenqi and Ma, Yao and Li, Qing and He, Yuan and Zhao, Eric and Tang, Jiliang and Yin, Dawei},
	year = {2019},
	keywords = {Graph Neural Networks, Neural Networks, Recommender Systems, Social Network, Social Recommendation},
	pages = {417--426},
	file = {Fan et al. - 2019 - Graph Neural Networks for Social Recommendation.pdf:/home/tom/Zotero/storage/75WWMRL9/Fan et al. - 2019 - Graph Neural Networks for Social Recommendation.pdf:application/pdf},
}

@article{hamilton_inductive_2018,
	title = {Inductive {Representation} {Learning} on {Large} {Graphs}},
	url = {http://arxiv.org/abs/1706.02216},
	abstract = {Low-dimensional embeddings of nodes in large graphs have proved extremely useful in a variety of prediction tasks, from content recommendation to identifying protein functions. However, most existing approaches require that all nodes in the graph are present during training of the embeddings; these previous approaches are inherently transductive and do not naturally generalize to unseen nodes. Here we present GraphSAGE, a general, inductive framework that leverages node feature information (e.g., text attributes) to efficiently generate node embeddings for previously unseen data. Instead of training individual embeddings for each node, we learn a function that generates embeddings by sampling and aggregating features from a node's local neighborhood. Our algorithm outperforms strong baselines on three inductive node-classification benchmarks: we classify the category of unseen nodes in evolving information graphs based on citation and Reddit post data, and we show that our algorithm generalizes to completely unseen graphs using a multi-graph dataset of protein-protein interactions.},
	urldate = {2021-04-13},
	journal = {arXiv:1706.02216 [cs, stat]},
	author = {Hamilton, William L. and Ying, Rex and Leskovec, Jure},
	month = sep,
	year = {2018},
	note = {arXiv: 1706.02216},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning, Computer Science - Social and Information Networks},
	file = {arXiv Fulltext PDF:/home/tom/Zotero/storage/P79K5LZX/Hamilton et al. - 2018 - Inductive Representation Learning on Large Graphs.pdf:application/pdf;arXiv.org Snapshot:/home/tom/Zotero/storage/LAY4Z38X/1706.html:text/html},
}

@inproceedings{xu_graph_2019,
	address = {Macao, China},
	title = {Graph {Contextualized} {Self}-{Attention} {Network} for {Session}-based {Recommendation}},
	isbn = {978-0-9992411-4-1},
	url = {https://www.ijcai.org/proceedings/2019/547},
	doi = {10.24963/ijcai.2019/547},
	abstract = {Session-based recommendation, which aims to predict the userâs immediate next action based on anonymous sessions, is a key task in many online services (e.g., e-commerce, media streaming). Recently, Self-Attention Network (SAN) has achieved signiï¬cant success in various sequence modeling tasks without using either recurrent or convolutional network. However, SAN lacks local dependencies that exist over adjacent items and limits its capacity for learning contextualized representations of items in sequences. In this paper, we propose a graph contextualized self-attention model (GC-SAN), which utilizes both graph neural network and self-attention mechanism, for sessionbased recommendation. In GC-SAN, we dynamically construct a graph structure for session sequences and capture rich local dependencies via graph neural network (GNN). Then each session learns long-range dependencies by applying the self-attention mechanism. Finally, each session is represented as a linear combination of the global preference and the current interest of that session. Extensive experiments on two real-world datasets show that GC-SAN outperforms state-of-the-art methods consistently.},
	language = {en},
	urldate = {2021-04-14},
	booktitle = {Proceedings of the {Twenty}-{Eighth} {International} {Joint} {Conference} on {Artificial} {Intelligence}},
	publisher = {International Joint Conferences on Artificial Intelligence Organization},
	author = {Xu, Chengfeng and Zhao, Pengpeng and Liu, Yanchi and Sheng, Victor S. and Xu, Jiajie and Zhuang, Fuzhen and Fang, Junhua and Zhou, Xiaofang},
	month = aug,
	year = {2019},
	pages = {3940--3946},
	file = {Xu et al. - 2019 - Graph Contextualized Self-Attention Network for Se.pdf:/home/tom/Zotero/storage/JW2Y585X/Xu et al. - 2019 - Graph Contextualized Self-Attention Network for Se.pdf:application/pdf},
}

@inproceedings{wang_kgat_2019,
	address = {New York, NY, USA},
	series = {{KDD} '19},
	title = {{KGAT}: {Knowledge} {Graph} {Attention} {Network} for {Recommendation}},
	isbn = {978-1-4503-6201-6},
	shorttitle = {{KGAT}},
	url = {https://doi.org/10.1145/3292500.3330989},
	doi = {10.1145/3292500.3330989},
	abstract = {To provide more accurate, diverse, and explainable recommendation, it is compulsory to go beyond modeling user-item interactions and take side information into account. Traditional methods like factorization machine (FM) cast it as a supervised learning problem, which assumes each interaction as an independent instance with side information encoded. Due to the overlook of the relations among instances or items (e.g., the director of a movie is also an actor of another movie), these methods are insufficient to distill the collaborative signal from the collective behaviors of users. In this work, we investigate the utility of knowledge graph (KG), which breaks down the independent interaction assumption by linking items with their attributes. We argue that in such a hybrid structure of KG and user-item graph, high-order relations --- which connect two items with one or multiple linked attributes --- are an essential factor for successful recommendation. We propose a new method named Knowledge Graph Attention Network (KGAT) which explicitly models the high-order connectivities in KG in an end-to-end fashion. It recursively propagates the embeddings from a node's neighbors (which can be users, items, or attributes) to refine the node's embedding, and employs an attention mechanism to discriminate the importance of the neighbors. Our KGAT is conceptually advantageous to existing KG-based recommendation methods, which either exploit high-order relations by extracting paths or implicitly modeling them with regularization. Empirical results on three public benchmarks show that KGAT significantly outperforms state-of-the-art methods like Neural FM and RippleNet. Further studies verify the efficacy of embedding propagation for high-order relation modeling and the interpretability benefits brought by the attention mechanism. We release the codes and datasets at https://github.com/xiangwang1223/knowledge\_graph\_attention\_network.},
	urldate = {2021-04-14},
	booktitle = {Proceedings of the 25th {ACM} {SIGKDD} {International} {Conference} on {Knowledge} {Discovery} \& {Data} {Mining}},
	publisher = {Association for Computing Machinery},
	author = {Wang, Xiang and He, Xiangnan and Cao, Yixin and Liu, Meng and Chua, Tat-Seng},
	month = jul,
	year = {2019},
	keywords = {knowledge graph, collaborative filtering, embedding propagation, graph neural network, higher-order connectivity, recommendation},
	pages = {950--958},
	file = {Submitted Version:/home/tom/Zotero/storage/GY9WZ8CN/Wang et al. - 2019 - KGAT Knowledge Graph Attention Network for Recomm.pdf:application/pdf},
}

@inproceedings{gori_new_2005,
	address = {Montreal, Que., Canada},
	title = {A new model for learning in graph domains},
	volume = {2},
	isbn = {978-0-7803-9048-5},
	url = {http://ieeexplore.ieee.org/document/1555942/},
	doi = {10.1109/IJCNN.2005.1555942},
	abstract = {In several applications the information is naturally represented by graphs. Traditional approaches cope with graphical data structures using a preprocessing phase which transforms the graphs into a set of ï¬at vectors. However, in this way, important topological information may be lost and the achieved results may heavily depend on the preprocessing stage. This paper presents a new neural model, called graph neural network (GNN), capable of directly processing graphs. GNNs extends recursive neural networks and can be applied on most of the practically useful kinds of graphs, including directed, undirected, labelled and cyclic graphs. A learning algorithm for GNNs is proposed and some experiments are discussed which assess the properties of the model.},
	language = {en},
	urldate = {2021-04-14},
	booktitle = {Proceedings. 2005 {IEEE} {International} {Joint} {Conference} on {Neural} {Networks}, 2005.},
	publisher = {IEEE},
	author = {Gori, M. and Monfardini, G. and Scarselli, F.},
	year = {2005},
	pages = {729--734},
	file = {Gori et al. - 2005 - A new model for learning in graph domains.pdf:/home/tom/Zotero/storage/VSJPTF2B/Gori et al. - 2005 - A new model for learning in graph domains.pdf:application/pdf},
}

@article{scarselli_graph_2009,
	title = {The {Graph} {Neural} {Network} {Model}},
	volume = {20},
	issn = {1941-0093},
	doi = {10.1109/TNN.2008.2005605},
	abstract = {Many underlying relationships among data in several areas of science and engineering, e.g., computer vision, molecular chemistry, molecular biology, pattern recognition, and data mining, can be represented in terms of graphs. In this paper, we propose a new neural network model, called graph neural network (GNN) model, that extends existing neural network methods for processing the data represented in graph domains. This GNN model, which can directly process most of the practically useful types of graphs, e.g., acyclic, cyclic, directed, and undirected, implements a function tau(G,n) isin IRm that maps a graph G and one of its nodes n into an m-dimensional Euclidean space. A supervised learning algorithm is derived to estimate the parameters of the proposed GNN model. The computational cost of the proposed algorithm is also considered. Some experimental results are shown to validate the proposed learning algorithm, and to demonstrate its generalization capabilities.},
	number = {1},
	journal = {IEEE Transactions on Neural Networks},
	author = {Scarselli, F. and Gori, M. and Tsoi, A. C. and Hagenbuchner, M. and Monfardini, G.},
	month = jan,
	year = {2009},
	note = {Conference Name: IEEE Transactions on Neural Networks},
	keywords = {Neural networks, Supervised learning, Biological system modeling, Biology, Chemistry, Computer vision, Data engineering, Data mining, graph neural networks (GNNs), graph processing, Graphical domains, Parameter estimation, Pattern recognition, recursive neural networks},
	pages = {61--80},
	file = {Full Text:/home/tom/Zotero/storage/3RWH47LY/Scarselli et al. - 2009 - The Graph Neural Network Model.pdf:application/pdf;IEEE Xplore Abstract Record:/home/tom/Zotero/storage/MWC4ATBM/4700287.html:text/html},
}

@article{duvenaud_convolutional_2015,
	title = {Convolutional {Networks} on {Graphs} for {Learning} {Molecular} {Fingerprints}},
	url = {http://arxiv.org/abs/1509.09292},
	abstract = {We introduce a convolutional neural network that operates directly on graphs. These networks allow end-to-end learning of prediction pipelines whose inputs are graphs of arbitrary size and shape. The architecture we present generalizes standard molecular feature extraction methods based on circular fingerprints. We show that these data-driven features are more interpretable, and have better predictive performance on a variety of tasks.},
	urldate = {2021-04-25},
	journal = {arXiv:1509.09292 [cs, stat]},
	author = {Duvenaud, David and Maclaurin, Dougal and Aguilera-Iparraguirre, Jorge and GÃ³mez-Bombarelli, Rafael and Hirzel, Timothy and Aspuru-Guzik, AlÃ¡n and Adams, Ryan P.},
	month = nov,
	year = {2015},
	note = {arXiv: 1509.09292},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning, Computer Science - Neural and Evolutionary Computing},
	annote = {Comment: 9 pages, 5 figures. To appear in Neural Information Processing Systems (NIPS)},
	file = {arXiv Fulltext PDF:/home/tom/Zotero/storage/VGWYNURT/Duvenaud et al. - 2015 - Convolutional Networks on Graphs for Learning Mole.pdf:application/pdf;arXiv.org Snapshot:/home/tom/Zotero/storage/CINV5LTQ/1509.html:text/html},
}

@inproceedings{bordes_translating_2013,
	address = {Red Hook, NY, USA},
	series = {{NIPS}'13},
	title = {Translating embeddings for modeling multi-relational data},
	abstract = {We consider the problem of embedding entities and relationships of multi-relational data in low-dimensional vector spaces. Our objective is to propose a canonical model which is easy to train, contains a reduced number of parameters and can scale up to very large databases. Hence, we propose TransE, a method which models relationships by interpreting them as translations operating on the low-dimensional embeddings of the entities. Despite its simplicity, this assumption proves to be powerful since extensive experiments show that TransE significantly outperforms state-of-the-art methods in link prediction on two knowledge bases. Besides, it can be successfully trained on a large scale data set with 1M entities, 25k relationships and more than 17M training samples.},
	urldate = {2021-04-15},
	booktitle = {Proceedings of the 26th {International} {Conference} on {Neural} {Information} {Processing} {Systems} - {Volume} 2},
	publisher = {Curran Associates Inc.},
	author = {Bordes, Antoine and Usunier, Nicolas and Garcia-DurÃ¡n, Alberto and Weston, Jason and Yakhnenko, Oksana},
	month = dec,
	year = {2013},
	pages = {2787--2795},
	file = {Bordes et al. - Translating Embeddings for Modeling Multi-relation.pdf:/home/tom/Zotero/storage/WJBC55XL/Bordes et al. - Translating Embeddings for Modeling Multi-relation.pdf:application/pdf},
}

@techreport{wang_knowledge_nodate,
	title = {Knowledge {Graph} {Embedding} by {Translating} on {Hyperplanes}},
	url = {www.aaai.org},
	abstract = {We deal with embedding a large scale knowledge graph composed of entities and relations into a continuous vector space. TransE is a promising method proposed recently, which is very efficient while achieving state-of-the-art predictive performance. We discuss some mapping properties of relations which should be considered in embedding, such as reflexive , one-to-many, many-to-one, and many-to-many. We note that TransE does not do well in dealing with these properties. Some complex models are capable of preserving these mapping properties but sacrifice efficiency in the process. To make a good trade-off between model capacity and efficiency, in this paper we propose TransH which models a relation as a hyperplane together with a translation operation on it. In this way, we can well preserve the above mapping properties of relations with almost the same model complexity of TransE. Additionally, as a practical knowledge graph is often far from completed, how to construct negative examples to reduce false negative labels in training is very important. Utilizing the one-to-many/many-to-one mapping property of a relation, we propose a simple trick to reduce the possibility of false negative labeling. We conduct extensive experiments on link prediction, triplet classification and fact extraction on benchmark datasets like WordNet and Freebase. Experiments show TransH delivers significant improvements over TransE on predictive accuracy with comparable capability to scale up.},
	author = {Wang, Zhen and Zhang, Jianwen and Feng, Jianlin and Chen, Zheng},
	keywords = {Knowledge Representation and Reasoning},
	file = {Wang et al. - Knowledge Graph Embedding by Translating on Hyperp.pdf:/home/tom/Zotero/storage/CNBQYAT6/Wang et al. - Knowledge Graph Embedding by Translating on Hyperp.pdf:application/pdf},
}

@techreport{ji_knowledge_nodate,
	title = {Knowledge {Graph} {Embedding} via {Dynamic} {Mapping} {Matrix}},
	abstract = {Knowledge graphs are useful resources for numerous AI applications, but they are far from completeness. Previous work such as TransE, TransH and TransR/CTransR regard a relation as translation from head entity to tail entity and the CTransR achieves state-of-the-art performance. In this paper , we propose a more fine-grained model named TransD, which is an improvement of TransR/CTransR. In TransD, we use two vectors to represent a named symbol object (entity and relation). The first one represents the meaning of a(n) entity (relation), the other one is used to construct mapping matrix dynamically. Compared with TransR/CTransR, TransD not only considers the diversity of relations, but also entities. TransD has less parameters and has no matrix-vector multiplication operations, which makes it can be applied on large scale graphs. In Experiments , we evaluate our model on two typical tasks including triplets classification and link prediction. Evaluation results show that our approach outperforms state-of-the-art methods.},
	author = {Ji, Guoliang and He, Shizhu and Xu, Liheng and Liu, Kang and Zhao, Jun},
	pages = {687--696},
	file = {Ji et al. - Knowledge Graph Embedding via Dynamic Mapping Matr.pdf:/home/tom/Zotero/storage/IY8GR6LG/Ji et al. - Knowledge Graph Embedding via Dynamic Mapping Matr.pdf:application/pdf},
}

@article{guo_survey_2020,
	title = {A {Survey} on {Knowledge} {Graph}-{Based} {Recommender} {Systems}},
	issn = {1558-2191},
	doi = {10.1109/TKDE.2020.3028705},
	abstract = {To solve the information explosion problem and enhance user experience in various online applications, recommender systems have been developed to model users' preferences. Although numerous efforts have been made toward more personalized recommendations, recommender systems still suffer from several challenges, such as data sparsity and cold-start problems. In recent years, generating recommendations with the knowledge graph as side information has attracted considerable interest. Such an approach can not only alleviate the above mentioned issues for a more accurate recommendation, but also provide explanations for recommended items. In this paper, we conduct a systematical survey of knowledge graph-based recommender systems. We collect recently published papers in this field, and group them into three categories, i.e., embedding-based methods, connection-based methods, and propagation-based methods. Also, we further subdivide each category according to the characteristics of these approaches. Moreover, we investigate the proposed algorithms by focusing on how the papers utilize the knowledge graph for accurate and explainable recommendation. Finally, we propose several potential research directions in this field.},
	journal = {IEEE Transactions on Knowledge and Data Engineering},
	author = {Guo, Qingyu and Zhuang, Fuzhen and Qin, Chuan and Zhu, Hengshu and Xie, Xing and Xiong, Hui and He, Qing},
	year = {2020},
	note = {Conference Name: IEEE Transactions on Knowledge and Data Engineering},
	keywords = {Avatars, Blood, Electronic mail, Explainable Recommendation, Feature extraction, Knowledge Graph, Machine learning, Motion pictures, Recommender System, Recommender systems},
	pages = {1--1},
	file = {IEEE Xplore Abstract Record:/home/tom/Zotero/storage/HEBKIED6/9216015.html:text/html;IEEE Xplore Full Text PDF:/home/tom/Zotero/storage/MKTMZQBR/Guo et al. - 2020 - A Survey on Knowledge Graph-Based Recommender Syst.pdf:application/pdf},
}

@inproceedings{xin_folding_2017,
	address = {New York, NY, USA},
	series = {{RecSys} '17},
	title = {Folding: {Why} {Good} {Models} {Sometimes} {Make} {Spurious} {Recommendations}},
	isbn = {978-1-4503-4652-8},
	shorttitle = {Folding},
	url = {http://doi.org/10.1145/3109859.3109911},
	doi = {10.1145/3109859.3109911},
	abstract = {In recommender systems based on low-rank factorization of a partially observed user-item matrix, a common phenomenon that plagues many otherwise effective models is the interleaving of good and spurious recommendations in the top-K results. A single spurious recommendation can dramatically impact the perceived quality of a recommender system. Spurious recommendations do not result in serendipitous discoveries but rather cognitive dissonance. In this work, we investigate folding, a major contributing factor to spurious recommendations. Folding refers to the unintentional overlap of disparate groups of users and items in the low-rank embedding vector space, induced by improper handling of missing data. We formally define a metric that quantifies the severity of folding in a trained system, to assist in diagnosing its potential to make inappropriate recommendations. The folding metric complements existing information retrieval metrics that focus on the number of good recommendations and their ranks but ignore the impact of undesired recommendations. We motivate the folding metric definition on synthetic data and evaluate its effectiveness on both synthetic and real world datasets. In studying the relationship between the folding metric and other characteristics of recommender systems, we observe that optimizing for goodness metrics can lead to high folding and thus more spurious recommendations.},
	urldate = {2021-10-17},
	booktitle = {Proceedings of the {Eleventh} {ACM} {Conference} on {Recommender} {Systems}},
	publisher = {Association for Computing Machinery},
	author = {Xin, Doris and Mayoraz, Nicolas and Pham, Hubert and Lakshmanan, Karthik and Anderson, John R.},
	month = aug,
	year = {2017},
	keywords = {collaborative filtering, evaluation metric, folding, matrix factorization, mnar},
	pages = {201--209},
	file = {Full Text PDF:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/IHPY8FGY/Xin et al. - 2017 - Folding Why Good Models Sometimes Make Spurious R.pdf:application/pdf},
}

@article{le_distributed_nodate,
	title = {Distributed {Representations} of {Sentences} and {Documents}},
	abstract = {Many machine learning algorithms require the input to be represented as a ï¬xed-length feature vector. When it comes to texts, one of the most common ï¬xed-length features is bag-of-words. Despite their popularity, bag-of-words features have two major weaknesses: they lose the ordering of the words and they also ignore semantics of the words. For example, âpowerful,â âstrongâ and âParisâ are equally distant. In this paper, we propose Paragraph Vector, an unsupervised algorithm that learns ï¬xed-length feature representations from variable-length pieces of texts, such as sentences, paragraphs, and documents. Our algorithm represents each document by a dense vector which is trained to predict words in the document. Its construction gives our algorithm the potential to overcome the weaknesses of bag-ofwords models. Empirical results show that Paragraph Vectors outperform bag-of-words models as well as other techniques for text representations. Finally, we achieve new state-of-the-art results on several text classiï¬cation and sentiment analysis tasks.},
	language = {en},
	author = {Le, Quoc and Mikolov, Tomas},
	pages = {9},
	file = {Le and Mikolov - Distributed Representations of Sentences and Docum.pdf:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/6FD7UZW8/Le and Mikolov - Distributed Representations of Sentences and Docum.pdf:application/pdf},
}

@article{mikolov_efficient_2013,
	title = {Efficient {Estimation} of {Word} {Representations} in {Vector} {Space}},
	url = {http://arxiv.org/abs/1301.3781},
	abstract = {We propose two novel model architectures for computing continuous vector representations of words from very large data sets. The quality of these representations is measured in a word similarity task, and the results are compared to the previously best performing techniques based on different types of neural networks. We observe large improvements in accuracy at much lower computational cost, i.e. it takes less than a day to learn high quality word vectors from a 1.6 billion words data set. Furthermore, we show that these vectors provide state-of-the-art performance on our test set for measuring syntactic and semantic word similarities.},
	urldate = {2021-10-17},
	journal = {arXiv:1301.3781 [cs]},
	author = {Mikolov, Tomas and Chen, Kai and Corrado, Greg and Dean, Jeffrey},
	month = sep,
	year = {2013},
	note = {arXiv: 1301.3781},
	keywords = {Computer Science - Computation and Language},
	file = {arXiv Fulltext PDF:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/DQRKU88L/Mikolov et al. - 2013 - Efficient Estimation of Word Representations in Ve.pdf:application/pdf;arXiv.org Snapshot:/mnt/0000678400004823/Users/SharpRain/Documents/Zotero/storage/V54DMXJ2/1301.html:text/html},
}

@inproceedings{xu_repersp_2017,
	title = {{REPERSP}: {Recommending} {Personalized} {Software} {Projects} on {GitHub}},
	doi = {10.1109/ICSME.2017.20},
	abstract = {In the open source community such as GitHub, developers usually need to find projects similar to their work, with the aim to reuse their functions and explore ideas of features that could be possibly added into their project at hand. Traditional text search engine can help detect similar resources. However, it is difficult for developers to use in open source community because a few query words cannot describe the whole features of a project. In this paper, we present a practical software recommendation system, REPERSP, which is used to recommend personalized software projects in GitHub. According to the features of projects created by developers and their behavior to other known projects, REPERSP recommends the top N relevant and personalized software projects. Moreover, REPERSP is implemented with the MapReduce parallel processing frame - Apache Spark for large-scale data, which can be scaled to a large number of users and projects for practical usage. Empirical results show that REPERSP can recommend more accurate results compared with other two recommendation algorithms, i.e., UserCF (user collaborative filtering) and ItemCF (item collaborative filtering). Video of our demo is available at https://youtu.be/WKigSUV4UA0.},
	booktitle = {2017 {IEEE} {International} {Conference} on {Software} {Maintenance} and {Evolution} ({ICSME})},
	author = {Xu, W. and Sun, X. and Hu, J. and Li, B.},
	year = {2017},
	keywords = {Collaboration, Computers, Engines, GitHub, personalized recommendation, Project recommendation, Software, Software algorithms, Sparks, Synchronization},
	pages = {648--652},
	file = {Xu et al. - 2017 - REPERSP Recommending Personalized Software Projec.pdf:/home/tom/Zotero/storage/NWPZU7K5/Xu et al. - 2017 - REPERSP Recommending Personalized Software Projec.pdf:application/pdf},
}

@article{jonschkowski_patterns_2016,
	title = {Patterns for {Learning} with {Side} {Information}},
	url = {http://arxiv.org/abs/1511.06429},
	abstract = {Supervised, semi-supervised, and unsupervised learning estimate a function given input/output samples. Generalization of the learned function to unseen data can be improved by incorporating side information into learning. Side information are data that are neither from the input space nor from the output space of the function, but include useful information for learning it. In this paper we show that learning with side information subsumes a variety of related approaches, e.g. multi-task learning, multi-view learning and learning using privileged information. Our main contributions are (i) a new perspective that connects these previously isolated approaches, (ii) insights about how these methods incorporate different types of prior knowledge, and hence implement different patterns, (iii) facilitating the application of these methods in novel tasks, as well as (iv) a systematic experimental evaluation of these patterns in two supervised learning tasks.},
	urldate = {2021-04-16},
	journal = {arXiv:1511.06429 [cs, stat]},
	author = {Jonschkowski, Rico and HÃ¶fer, Sebastian and Brock, Oliver},
	month = feb,
	year = {2016},
	note = {arXiv: 1511.06429},
	keywords = {Computer Science - Machine Learning, Statistics - Machine Learning},
	file = {arXiv Fulltext PDF:/home/tom/Zotero/storage/9P4IDZ5E/Jonschkowski et al. - 2016 - Patterns for Learning with Side Information.pdf:application/pdf;arXiv.org Snapshot:/home/tom/Zotero/storage/9BDXUJGT/1511.html:text/html},
}

@article{zhang_knowledge_2020,
	title = {A {Knowledge} {Graph} based {Approach} for {Mobile} {Application} {Recommendation}},
	url = {http://arxiv.org/abs/2009.08621},
	abstract = {With the rapid prevalence of mobile devices and the dramatic proliferation of mobile applications (apps), app recommendation becomes an emergent task that would benefit both app users and stockholders. How to effectively organize and make full use of rich side information of users and apps is a key challenge to address the sparsity issue for traditional approaches. To meet this challenge, we proposed a novel end-to-end Knowledge Graph Convolutional Embedding Propagation Model (KGEP) for app recommendation. Specifically, we first designed a knowledge graph construction method to model the user and app side information, then adopted KG embedding techniques to capture the factual triplet-focused semantics of the side information related to the first-order structure of the KG, and finally proposed a relation-weighted convolutional embedding propagation model to capture the recommendation-focused semantics related to high-order structure of the KG. Extensive experiments conducted on a real-world dataset validate the effectiveness of the proposed approach compared to the state-of-the-art recommendation approaches.},
	author = {Zhang, Mingwei and Zhao, Jiawei and Dong, Hai and Deng, Ke and Liu, Ying},
	year = {2020},
	file = {Zhang et al. - 2020 - A Knowledge Graph based Approach for Mobile Applic.pdf:/home/tom/Zotero/storage/9EB4UE2B/Zhang et al. - 2020 - A Knowledge Graph based Approach for Mobile Applic.pdf:application/pdf},
}